# -*- nix -*-
{ config, pkgs, lib, ... }:
{
  networking.hostName = "naberius";
  networking.hostId = "c9d7882d";

  imports = [
    ./roles/server.nix
    ./roles/nixops.nix
    ./roles/binary-cache.nix
    ./users/binarin.nix
    ./modules/force-my-version.nix
    ./packages/use-my-overlays.nix
    ./roles/gitlab.nix
    ./nixpkgs-master/nixos/modules/services/continuous-integration/gitlab-runner.nix
    ./modules/easyrsa.nix
  ];

  networking.firewall.allowedTCPPorts = [80 443];

  disabledModules = [ "services/misc/gitlab.nix" "services/continuous-integration/gitlab-runner.nix" ];

  systemd.services.gitlab = rec {
    after = [
      "gitlab-database-password-key.service"
      "gitlab-db-key-base-key.service"
      "gitlab-otp-key-base-key.service"
      "gitlab-secret-key-base-key.service"
    ];
    wants = after;
  };

  services.gitlab = {
    enable = true;
    host = "gitlab.binarin.ru";
    port = 443;
    https = true;
    smtp = {
      enable = true;
      port = 25;
      domain = "gitlab.binarin.ru";
    };
    packages = {
      inherit (pkgs.bleeding) gitlab gitlab-shell gitlab-workhorse gitaly;
    };
    databasePasswordFile = "/run/keys/gitlab-database-password";
    secrets = {
      secretFile = "/run/keys/gitlab-secret-key-base";
      otpFile = "/run/keys/gitlab-otp-key-base";
      dbFile  = "/run/keys/gitlab-db-key-base";
      jws  = "still to do";
    };
  };

  # services.postfix.enable = false;

  services.postgresql = {
    enable = true;
  };

  services.nginx.enable = true;
  services.nginx.recommendedTlsSettings = true;
  services.nginx.recommendedProxySettings = true;

  services.nginx.upstreams.gitlab-workhorse.servers = {
    "unix:/run/gitlab/gitlab-workhorse.socket" = {};
  };

  services.nginx.virtualHosts.gitlab = {
    serverName = "gitlab.binarin.ru";
    forceSSL = true;
    enableACME = true;

    locations."/" = {
      # proxyWebSockets = true;
      proxyPass = "http://gitlab-workhorse";
      extraConfig = ''
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
      '';
    };

  };

  systemd.services.gitlab-runner = rec {
    after = [
      "gitlab-naberius-runner-token.service"
    ];
    wants = after;
    preStart = ''
      mkdir -p /run/gitlab-runner
      chmod 0700 /run/gitlab-runner
      cat <<EOF > /run/gitlab-runner/config.toml
      [[runners]]
        name = "naberius"
        url = "https://gitlab.binarin.ru/"
        token = "$(cat /run/keys/gitlab-naberius-runner-token)"
        limit = 2
        executor = "shell"
        builds_dir = ""
        shell = "bash"
      EOF
    '';
  };

  services.gitlab-runner = {
    enable = true;
    configFile = "/run/gitlab-runner/config.toml";
    package = pkgs.bleeding.gitlab-runner;
    packages = [ config.system.path ];
  };

  services.openvpn-easyrsa.servers.tcp-server = {
    ca = {
      reqCountry = "RU";
      reqProvince = "Moscow";
      reqCity = "Moscow";
      reqOrg = "binarin.ru";
      reqEmail = "binarin@binarin.ru";
      reqOu = "binarin.ru";
    };
    port = 8443;
    proto = "tcp";
    config = {
      dev = "ovpn-server-tcp";
      dev-type = "tun";
      cipher = "AES-128-CBC";
      mode = "server";
      tls-server = true;
      tun-mtu = 1300;
      push = [
        "\"route 10.10.10.0 255.255.255.0\""
        "\"topology net30\""
        # generated by ../scripts/non_rfc1918_openvpn.sh
        "\"route 0.0.0.0 248.0.0.0\""
        "\"route 8.0.0.0 254.0.0.0\""
        "\"route 11.0.0.0 255.0.0.0\""
        "\"route 12.0.0.0 252.0.0.0\""
        "\"route 16.0.0.0 240.0.0.0\""
        "\"route 32.0.0.0 224.0.0.0\""
        "\"route 64.0.0.0 192.0.0.0\""
        "\"route 128.0.0.0 224.0.0.0\""
        "\"route 160.0.0.0 248.0.0.0\""
        "\"route 168.0.0.0 252.0.0.0\""
        "\"route 172.0.0.0 255.240.0.0\""
        "\"route 172.32.0.0 255.224.0.0\""
        "\"route 172.64.0.0 255.192.0.0\""
        "\"route 172.128.0.0 255.128.0.0\""
        "\"route 173.0.0.0 255.0.0.0\""
        "\"route 174.0.0.0 254.0.0.0\""
        "\"route 176.0.0.0 240.0.0.0\""
        "\"route 192.0.0.0 255.128.0.0\""
        "\"route 192.128.0.0 255.224.0.0\""
        "\"route 192.160.0.0 255.248.0.0\""
        "\"route 192.169.0.0 255.255.0.0\""
        "\"route 192.170.0.0 255.254.0.0\""
        "\"route 192.172.0.0 255.252.0.0\""
        "\"route 192.176.0.0 255.240.0.0\""
        "\"route 192.192.0.0 255.192.0.0\""
        "\"route 193.0.0.0 255.0.0.0\""
        "\"route 194.0.0.0 254.0.0.0\""
        "\"route 196.0.0.0 252.0.0.0\""
        "\"route 200.0.0.0 248.0.0.0\""
        "\"route 208.0.0.0 240.0.0.0\""
      ];
      client-to-client = true;
      ifconfig = "10.10.10.1 10.10.10.2";
      ifconfig-pool = "10.10.10.128 10.10.10.254";
      route = "10.10.10.0 255.255.255.0";
      keepalive = "5 30";
    };
    clients = {
      balthamel-to-naberius-tcp-server = {
        ccd = {
          ifconfig-push = "10.10.10.6 10.10.10.5";
        };
      };
    };
  };

  networking.nat = {
    enable = true;
    internalInterfaces = ["ovpn-server-tcp"];
    externalInterface = "eth0";
  };
} // lib.optionalAttrs ((builtins.getEnv "CI_JOB_NAME") != "") {
  fileSystems."/" = {
    device = "/dev/mapper/sysvg-root";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-label/boot";
    fsType = "ext2";
  };

  boot.loader.grub.devices = [ "/dev/sda" "/dev/sdb" ];
}
