---
- name: Only allow system-defined authorized_keys
  notify: restart sshd
  lineinfile:
    path: /etc/ssh/sshd_config
    line: AuthorizedKeysFile /etc/ssh/authorized_keys.d/%u
    regex: '^\s*#*\s*AuthorizedKeysFile'
- name: Disable password-based auth
  notify: restart sshd
  block:
    - lineinfile:
        path: /etc/ssh/sshd_config
        line: PermitRootLogin prohibit-password
        regex: '^\s*#*\s*PermitRootLogin'
    - lineinfile:
        path: /etc/ssh/sshd_config
        line: PasswordAuthentication no
        regex: '^\s*#*\s*PasswordAuthentication\s+(yes|no)'
    - lineinfile:
        path: /etc/ssh/sshd_config
        line: KbdInteractiveAuthentication no
        regex: '^\s*#*\s*KbdInteractiveAuthentication\s+(yes|no)'
    - lineinfile:
        # Or change /etc/pam.d/sshd not to include 'common-auth'/'pam_unix'
        # usermod -p '*' username is needed if the user doesn't have a password
        path: /etc/ssh/sshd_config
        line: UsePAM no
        regex: '^\s*#*\s*UsePAM'
- name: Create /etc/ssh/authorized_keys.d/
  file:
    path: /etc/ssh/authorized_keys.d/
    state: directory
- name: Provision authorized_keys for user
  template:
    src: authorized_keys.j2
    dest: "/etc/ssh/authorized_keys.d/{{ username }}"
  loop: "{{ ['root'] + (hostvars[inventory_hostname].ssh_users if 'ssh_users' in hostvars[inventory_hostname] else []) }}"
  loop_control:
    loop_var: username
